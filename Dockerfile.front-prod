# # Build stage
# FROM node:16 as build
# WORKDIR /app
# COPY Frontend/package*.json ./
# RUN npm install
# COPY Frontend .
# RUN npm run build

# # Production stage
# FROM nginx:alpine
# COPY --from=build /app/dist /usr/share/nginx/html
# EXPOSE 80
# CMD ["nginx", "-g", "daemon off;"]

# FROM node:18
# WORKDIR /app
# COPY ./Frontend/package.json .
# COPY ./Frontend/package-lock.json .
# RUN npm install

# # Clear any existing Vite cache
# RUN rm -rf node_modules/.vite

# COPY ./Frontend .

# # Clear Vite cache again after copying files
# RUN npx vite optimize --force

# EXPOSE 9999
# CMD ["npm", "run", "dev", "--", "--host", "0.0.0.0", "--port", "9999"]

#---------------------------------------------------


# FROM node:18 AS builder
# WORKDIR /app

# COPY ./Frontend/package.json ./Frontend/package-lock.json ./
# RUN npm install
# COPY ./Frontend .
# RUN npm run build

# # Serve with Nginx
# FROM nginx:alpine

# # Replace default nginx config
# RUN rm /etc/nginx/conf.d/default.conf
# COPY default.conf /etc/nginx/conf.d/default.conf

# # Copy frontend build
# COPY --from=builder /app/dist /var/www/html

# # Expose port used in nginx.conf
# EXPOSE 9999

# CMD ["nginx", "-g", "daemon off;"]

#--------------------------------------------------


# Build stage
# Build stage
FROM node:18-alpine AS build

WORKDIR /app

# Copy package files
COPY ./Frontend/package*.json ./

# Install ALL dependencies (including dev dependencies needed for build)
RUN npm ci

# Copy source code
COPY ./Frontend/ .

# Build the application
RUN npm run build

# Production stage
FROM nginx:alpine

# Copy custom nginx config
COPY default.conf /etc/nginx/conf.d/default.conf

# Copy built app
COPY --from=build /app/dist /usr/share/nginx/html

# Ensure proper permissions
RUN chown -R nginx:nginx /usr/share/nginx/html && \
    chmod -R 755 /usr/share/nginx/html

EXPOSE 9999

CMD ["nginx", "-g", "daemon off;"]